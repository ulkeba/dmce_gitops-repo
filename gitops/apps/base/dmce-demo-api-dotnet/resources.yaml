apiVersion: apps/v1
kind: Deployment
metadata:
  name: dmce-demo-api-dotnet--deployment
  labels:
    namespaced-resource: yes
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dmce-demo-api-dotnet
  template:
    metadata:
      labels:
        app: dmce-demo-api-dotnet
        scrape: "true"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/metrics"
        prometheus.io/port: "80"
    spec:
      containers:
      - name: dmce-demo-api-dotnet
        image: dmced01acr.azurecr.io/dmce_demo-api_dotnet:0.3.0
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 80
        - name: https
          containerPort: 443
        volumeMounts:
        - name: dmce-demo-api-dotnet--deployment--secrets
          mountPath: "/mnt/secrets"
          readOnly: true
      volumes:
      - name: dmce-demo-api-dotnet--deployment--secrets
        csi:
          driver: secrets-store.csi.k8s.io
          readOnly: true
          volumeAttributes:
            secretProviderClass: "dmce-demo-api-dotnet--secretproviderclass"
          nodePublishSecretRef:                       
            name: azure-key-vault-credentials
      imagePullSecrets:
      - name: acr-pull
---
apiVersion: v1
kind: Service
metadata:
  name: dmce-demo-api-dotnet--service
  labels:
    namespaced-resource: yes
spec:
  selector:
    app: dmce-demo-api-dotnet
  ports:
    - port: 8080
      targetPort: http
    - port: 8443
      targetPort: https
  type: LoadBalancer
---
apiVersion: secrets-store.csi.x-k8s.io/v1
kind: SecretProviderClass
metadata:
  name: dmce-demo-api-dotnet--secretproviderclass
  labels:
    namespaced-resource: yes
spec:
  provider: azure
  parameters:
    usePodIdentity: "false"
    objects:  |
      array:
        - |
          objectName: db-connection-string
          objectType: secret